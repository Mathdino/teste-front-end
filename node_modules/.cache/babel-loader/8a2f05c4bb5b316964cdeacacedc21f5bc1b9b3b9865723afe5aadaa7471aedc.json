{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmthe\\\\Downloads\\\\teste-front-end\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header/Header';\nimport HeroBanner from './components/HeroBanner/HeroBanner';\nimport CategoryIcons from './components/CategoryIcons/CategoryIcons';\nimport ProductShowcase from './components/ProductShowcase/ProductShowcase';\nimport Partners from './components/Partners/Partners';\nimport ProductModal from './components/ProductModal/ProductModal';\nimport './styles/App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  const fetchProducts = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      console.log('App - Iniciando fetch dos produtos...');\n      const response = await fetch('/banco.json');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('App - Dados recebidos:', data);\n      if (data.success && data.products) {\n        console.log('App - Produtos carregados com sucesso:', data.products.length);\n        setProducts(data.products);\n      } else {\n        throw new Error('Formato de dados inválido');\n      }\n    } catch (error) {\n      console.error('App - Erro ao carregar produtos:', error);\n      setError(error instanceof Error ? error.message : 'Erro desconhecido');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleProductClick = product => {\n    console.log('App - Produto clicado:', product);\n    setSelectedProduct(product);\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedProduct(null);\n  };\n\n  // Debug: verificar estado dos produtos\n  useEffect(() => {\n    console.log('App - Estado atual dos produtos:', products);\n    console.log('App - Loading:', isLoading);\n    console.log('App - Error:', error);\n  }, [products, isLoading, error]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HeroBanner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CategoryIcons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProductShowcase, {\n      products: products,\n      onProductClick: handleProductClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Partners, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), isModalOpen && selectedProduct && /*#__PURE__*/_jsxDEV(ProductModal, {\n      product: selectedProduct,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"vcKF43QPWOlV1fIP5oC9PBCMIpg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","HeroBanner","CategoryIcons","ProductShowcase","Partners","ProductModal","jsxDEV","_jsxDEV","App","_s","products","setProducts","selectedProduct","setSelectedProduct","isModalOpen","setIsModalOpen","isLoading","setIsLoading","error","setError","fetchProducts","console","log","response","fetch","ok","Error","status","data","json","success","length","message","handleProductClick","product","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onProductClick","onClose","_c","$RefreshReg$"],"sources":["C:/Users/mmthe/Downloads/teste-front-end/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from './components/Header/Header';\r\nimport HeroBanner from './components/HeroBanner/HeroBanner';\r\nimport CategoryIcons from './components/CategoryIcons/CategoryIcons';\r\nimport ProductShowcase from './components/ProductShowcase/ProductShowcase';\r\nimport Partners from './components/Partners/Partners';\r\nimport ProductModal from './components/ProductModal/ProductModal';\r\nimport { Product } from './types/Product';\r\nimport './styles/App.scss';\r\n\r\nconst App: React.FC = () => {\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n      \r\n      console.log('App - Iniciando fetch dos produtos...');\r\n      const response = await fetch('/banco.json');\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('App - Dados recebidos:', data);\r\n      \r\n      if (data.success && data.products) {\r\n        console.log('App - Produtos carregados com sucesso:', data.products.length);\r\n        setProducts(data.products);\r\n      } else {\r\n        throw new Error('Formato de dados inválido');\r\n      }\r\n    } catch (error) {\r\n      console.error('App - Erro ao carregar produtos:', error);\r\n      setError(error instanceof Error ? error.message : 'Erro desconhecido');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleProductClick = (product: Product) => {\r\n    console.log('App - Produto clicado:', product);\r\n    setSelectedProduct(product);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedProduct(null);\r\n  };\r\n\r\n  // Debug: verificar estado dos produtos\r\n  useEffect(() => {\r\n    console.log('App - Estado atual dos produtos:', products);\r\n    console.log('App - Loading:', isLoading);\r\n    console.log('App - Error:', error);\r\n  }, [products, isLoading, error]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n      <HeroBanner />\r\n      <CategoryIcons />\r\n      <ProductShowcase \r\n        products={products} \r\n        onProductClick={handleProductClick} \r\n      />\r\n      <Partners />\r\n      \r\n      {isModalOpen && selectedProduct && (\r\n        <ProductModal \r\n          product={selectedProduct} \r\n          onClose={closeModal} \r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}